//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18063 版自动生成。
// 
#pragma warning disable 1591

namespace ChinaPay.B3B.InterfaceTest.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InterfaceServiceSoap", Namespace="http://tempuri.org/")]
    public partial class InterfaceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PNRImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProduceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryApplyformOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyPostponeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayApplyformOperationCompleted;
        
        private System.Threading.SendOrPostCallback PNRImportWithoutPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayApplyformByPayTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayOrderByPayTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InterfaceService() {
            this.Url = global::ChinaPay.B3B.InterfaceTest.Properties.Settings.Default.ChinaPay_B3B_InterfaceTest_localhost_InterfaceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event PNRImportCompletedEventHandler PNRImportCompleted;
        
        /// <remarks/>
        public event ProduceOrderCompletedEventHandler ProduceOrderCompleted;
        
        /// <remarks/>
        public event OrderPayCompletedEventHandler OrderPayCompleted;
        
        /// <remarks/>
        public event QueryOrderCompletedEventHandler QueryOrderCompleted;
        
        /// <remarks/>
        public event QueryApplyformCompletedEventHandler QueryApplyformCompleted;
        
        /// <remarks/>
        public event ApplyPostponeCompletedEventHandler ApplyPostponeCompleted;
        
        /// <remarks/>
        public event ApplyRefundCompletedEventHandler ApplyRefundCompleted;
        
        /// <remarks/>
        public event PayApplyformCompletedEventHandler PayApplyformCompleted;
        
        /// <remarks/>
        public event PNRImportWithoutPatCompletedEventHandler PNRImportWithoutPatCompleted;
        
        /// <remarks/>
        public event PayApplyformByPayTypeCompletedEventHandler PayApplyformByPayTypeCompleted;
        
        /// <remarks/>
        public event PayOrderByPayTypeCompletedEventHandler PayOrderByPayTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Execute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Execute(string request) {
            object[] results = this.Invoke("Execute", new object[] {
                        request});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(string request) {
            this.ExecuteAsync(request, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(string request, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        request}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PNRImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PNRImport(string pnrContext, string userName, string sign) {
            object[] results = this.Invoke("PNRImport", new object[] {
                        pnrContext,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PNRImportAsync(string pnrContext, string userName, string sign) {
            this.PNRImportAsync(pnrContext, userName, sign, null);
        }
        
        /// <remarks/>
        public void PNRImportAsync(string pnrContext, string userName, string sign, object userState) {
            if ((this.PNRImportOperationCompleted == null)) {
                this.PNRImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPNRImportOperationCompleted);
            }
            this.InvokeAsync("PNRImport", new object[] {
                        pnrContext,
                        userName,
                        sign}, this.PNRImportOperationCompleted, userState);
        }
        
        private void OnPNRImportOperationCompleted(object arg) {
            if ((this.PNRImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PNRImportCompleted(this, new PNRImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProduceOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProduceOrder(string pnrContext, string associatePNR, string contact, string policyId, string batchNo, string userName, string sign) {
            object[] results = this.Invoke("ProduceOrder", new object[] {
                        pnrContext,
                        associatePNR,
                        contact,
                        policyId,
                        batchNo,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProduceOrderAsync(string pnrContext, string associatePNR, string contact, string policyId, string batchNo, string userName, string sign) {
            this.ProduceOrderAsync(pnrContext, associatePNR, contact, policyId, batchNo, userName, sign, null);
        }
        
        /// <remarks/>
        public void ProduceOrderAsync(string pnrContext, string associatePNR, string contact, string policyId, string batchNo, string userName, string sign, object userState) {
            if ((this.ProduceOrderOperationCompleted == null)) {
                this.ProduceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduceOrderOperationCompleted);
            }
            this.InvokeAsync("ProduceOrder", new object[] {
                        pnrContext,
                        associatePNR,
                        contact,
                        policyId,
                        batchNo,
                        userName,
                        sign}, this.ProduceOrderOperationCompleted, userState);
        }
        
        private void OnProduceOrderOperationCompleted(object arg) {
            if ((this.ProduceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProduceOrderCompleted(this, new ProduceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OrderPay(string id, string userName, string sign) {
            object[] results = this.Invoke("OrderPay", new object[] {
                        id,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OrderPayAsync(string id, string userName, string sign) {
            this.OrderPayAsync(id, userName, sign, null);
        }
        
        /// <remarks/>
        public void OrderPayAsync(string id, string userName, string sign, object userState) {
            if ((this.OrderPayOperationCompleted == null)) {
                this.OrderPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderPayOperationCompleted);
            }
            this.InvokeAsync("OrderPay", new object[] {
                        id,
                        userName,
                        sign}, this.OrderPayOperationCompleted, userState);
        }
        
        private void OnOrderPayOperationCompleted(object arg) {
            if ((this.OrderPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderPayCompleted(this, new OrderPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryOrder(string id, string userName, string sign) {
            object[] results = this.Invoke("QueryOrder", new object[] {
                        id,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryOrderAsync(string id, string userName, string sign) {
            this.QueryOrderAsync(id, userName, sign, null);
        }
        
        /// <remarks/>
        public void QueryOrderAsync(string id, string userName, string sign, object userState) {
            if ((this.QueryOrderOperationCompleted == null)) {
                this.QueryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOrderOperationCompleted);
            }
            this.InvokeAsync("QueryOrder", new object[] {
                        id,
                        userName,
                        sign}, this.QueryOrderOperationCompleted, userState);
        }
        
        private void OnQueryOrderOperationCompleted(object arg) {
            if ((this.QueryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryOrderCompleted(this, new QueryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryApplyform", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryApplyform(string id, string userName, string sign) {
            object[] results = this.Invoke("QueryApplyform", new object[] {
                        id,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryApplyformAsync(string id, string userName, string sign) {
            this.QueryApplyformAsync(id, userName, sign, null);
        }
        
        /// <remarks/>
        public void QueryApplyformAsync(string id, string userName, string sign, object userState) {
            if ((this.QueryApplyformOperationCompleted == null)) {
                this.QueryApplyformOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryApplyformOperationCompleted);
            }
            this.InvokeAsync("QueryApplyform", new object[] {
                        id,
                        userName,
                        sign}, this.QueryApplyformOperationCompleted, userState);
        }
        
        private void OnQueryApplyformOperationCompleted(object arg) {
            if ((this.QueryApplyformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryApplyformCompleted(this, new QueryApplyformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApplyPostpone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ApplyPostpone(string orderId, string passengers, string voyages, string reason, string userName, string sign) {
            object[] results = this.Invoke("ApplyPostpone", new object[] {
                        orderId,
                        passengers,
                        voyages,
                        reason,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyPostponeAsync(string orderId, string passengers, string voyages, string reason, string userName, string sign) {
            this.ApplyPostponeAsync(orderId, passengers, voyages, reason, userName, sign, null);
        }
        
        /// <remarks/>
        public void ApplyPostponeAsync(string orderId, string passengers, string voyages, string reason, string userName, string sign, object userState) {
            if ((this.ApplyPostponeOperationCompleted == null)) {
                this.ApplyPostponeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyPostponeOperationCompleted);
            }
            this.InvokeAsync("ApplyPostpone", new object[] {
                        orderId,
                        passengers,
                        voyages,
                        reason,
                        userName,
                        sign}, this.ApplyPostponeOperationCompleted, userState);
        }
        
        private void OnApplyPostponeOperationCompleted(object arg) {
            if ((this.ApplyPostponeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyPostponeCompleted(this, new ApplyPostponeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApplyRefund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ApplyRefund(string orderId, string passengers, string voyages, string refundType, string reason, string userName, string sign) {
            object[] results = this.Invoke("ApplyRefund", new object[] {
                        orderId,
                        passengers,
                        voyages,
                        refundType,
                        reason,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyRefundAsync(string orderId, string passengers, string voyages, string refundType, string reason, string userName, string sign) {
            this.ApplyRefundAsync(orderId, passengers, voyages, refundType, reason, userName, sign, null);
        }
        
        /// <remarks/>
        public void ApplyRefundAsync(string orderId, string passengers, string voyages, string refundType, string reason, string userName, string sign, object userState) {
            if ((this.ApplyRefundOperationCompleted == null)) {
                this.ApplyRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyRefundOperationCompleted);
            }
            this.InvokeAsync("ApplyRefund", new object[] {
                        orderId,
                        passengers,
                        voyages,
                        refundType,
                        reason,
                        userName,
                        sign}, this.ApplyRefundOperationCompleted, userState);
        }
        
        private void OnApplyRefundOperationCompleted(object arg) {
            if ((this.ApplyRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyRefundCompleted(this, new ApplyRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayApplyform", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PayApplyform(string orderId, string userName, string sign) {
            object[] results = this.Invoke("PayApplyform", new object[] {
                        orderId,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PayApplyformAsync(string orderId, string userName, string sign) {
            this.PayApplyformAsync(orderId, userName, sign, null);
        }
        
        /// <remarks/>
        public void PayApplyformAsync(string orderId, string userName, string sign, object userState) {
            if ((this.PayApplyformOperationCompleted == null)) {
                this.PayApplyformOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayApplyformOperationCompleted);
            }
            this.InvokeAsync("PayApplyform", new object[] {
                        orderId,
                        userName,
                        sign}, this.PayApplyformOperationCompleted, userState);
        }
        
        private void OnPayApplyformOperationCompleted(object arg) {
            if ((this.PayApplyformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayApplyformCompleted(this, new PayApplyformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PNRImportWithoutPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PNRImportWithoutPat(string pnrContext, string userName, string sign) {
            object[] results = this.Invoke("PNRImportWithoutPat", new object[] {
                        pnrContext,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PNRImportWithoutPatAsync(string pnrContext, string userName, string sign) {
            this.PNRImportWithoutPatAsync(pnrContext, userName, sign, null);
        }
        
        /// <remarks/>
        public void PNRImportWithoutPatAsync(string pnrContext, string userName, string sign, object userState) {
            if ((this.PNRImportWithoutPatOperationCompleted == null)) {
                this.PNRImportWithoutPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPNRImportWithoutPatOperationCompleted);
            }
            this.InvokeAsync("PNRImportWithoutPat", new object[] {
                        pnrContext,
                        userName,
                        sign}, this.PNRImportWithoutPatOperationCompleted, userState);
        }
        
        private void OnPNRImportWithoutPatOperationCompleted(object arg) {
            if ((this.PNRImportWithoutPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PNRImportWithoutPatCompleted(this, new PNRImportWithoutPatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayApplyformByPayType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PayApplyformByPayType(string id, string payType, string userName, string sign) {
            object[] results = this.Invoke("PayApplyformByPayType", new object[] {
                        id,
                        payType,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PayApplyformByPayTypeAsync(string id, string payType, string userName, string sign) {
            this.PayApplyformByPayTypeAsync(id, payType, userName, sign, null);
        }
        
        /// <remarks/>
        public void PayApplyformByPayTypeAsync(string id, string payType, string userName, string sign, object userState) {
            if ((this.PayApplyformByPayTypeOperationCompleted == null)) {
                this.PayApplyformByPayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayApplyformByPayTypeOperationCompleted);
            }
            this.InvokeAsync("PayApplyformByPayType", new object[] {
                        id,
                        payType,
                        userName,
                        sign}, this.PayApplyformByPayTypeOperationCompleted, userState);
        }
        
        private void OnPayApplyformByPayTypeOperationCompleted(object arg) {
            if ((this.PayApplyformByPayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayApplyformByPayTypeCompleted(this, new PayApplyformByPayTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayOrderByPayType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PayOrderByPayType(string id, string payType, string userName, string sign) {
            object[] results = this.Invoke("PayOrderByPayType", new object[] {
                        id,
                        payType,
                        userName,
                        sign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PayOrderByPayTypeAsync(string id, string payType, string userName, string sign) {
            this.PayOrderByPayTypeAsync(id, payType, userName, sign, null);
        }
        
        /// <remarks/>
        public void PayOrderByPayTypeAsync(string id, string payType, string userName, string sign, object userState) {
            if ((this.PayOrderByPayTypeOperationCompleted == null)) {
                this.PayOrderByPayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayOrderByPayTypeOperationCompleted);
            }
            this.InvokeAsync("PayOrderByPayType", new object[] {
                        id,
                        payType,
                        userName,
                        sign}, this.PayOrderByPayTypeOperationCompleted, userState);
        }
        
        private void OnPayOrderByPayTypeOperationCompleted(object arg) {
            if ((this.PayOrderByPayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayOrderByPayTypeCompleted(this, new PayOrderByPayTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PNRImportCompletedEventHandler(object sender, PNRImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PNRImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PNRImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProduceOrderCompletedEventHandler(object sender, ProduceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProduceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProduceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OrderPayCompletedEventHandler(object sender, OrderPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryOrderCompletedEventHandler(object sender, QueryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryApplyformCompletedEventHandler(object sender, QueryApplyformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryApplyformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryApplyformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyPostponeCompletedEventHandler(object sender, ApplyPostponeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyPostponeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyPostponeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyRefundCompletedEventHandler(object sender, ApplyRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PayApplyformCompletedEventHandler(object sender, PayApplyformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayApplyformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayApplyformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PNRImportWithoutPatCompletedEventHandler(object sender, PNRImportWithoutPatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PNRImportWithoutPatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PNRImportWithoutPatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PayApplyformByPayTypeCompletedEventHandler(object sender, PayApplyformByPayTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayApplyformByPayTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayApplyformByPayTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PayOrderByPayTypeCompletedEventHandler(object sender, PayOrderByPayTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayOrderByPayTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayOrderByPayTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591