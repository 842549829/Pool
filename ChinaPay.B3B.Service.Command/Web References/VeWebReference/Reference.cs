//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace ChinaPay.B3B.Service.Command.VeWebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="veSWScnServiceSoap", Namespace="urn:veSWScnService")]
    public partial class veSWScnService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RtPnrOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateXCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelXCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AVHOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetrOperationCompleted;
        
        private System.Threading.SendOrPostCallback ParsePnrOperationCompleted;
        
        private System.Threading.SendOrPostCallback ETDZOperationCompleted;
        
        private System.Threading.SendOrPostCallback TSSOperationCompleted;
        
        private System.Threading.SendOrPostCallback PATOperationCompleted;
        
        private System.Threading.SendOrPostCallback FDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CYOperationCompleted;
        
        private System.Threading.SendOrPostCallback FLPOperationCompleted;
        
        private System.Threading.SendOrPostCallback NFDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPNROperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPNROperationCompleted;
        
        private System.Threading.SendOrPostCallback CLRFOperationCompleted;
        
        private System.Threading.SendOrPostCallback ANOperationCompleted;
        
        private System.Threading.SendOrPostCallback TKScanOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AVHXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ONLYDETROperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetrXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback PNRPATOperationCompleted;
        
        private System.Threading.SendOrPostCallback QTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsAndUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUser2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SwitchGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback WFOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateXCD2OperationCompleted;
        
        private System.Threading.SendOrPostCallback QTE2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PnrAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSRFOIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AVHFLTOperationCompleted;
        
        private System.Threading.SendOrPostCallback PNRPAT2OperationCompleted;
        
        private System.Threading.SendOrPostCallback XCDstateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RRTPNROperationCompleted;
        
        private System.Threading.SendOrPostCallback Detr2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RtxPnrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneralCmdProcessOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public veSWScnService() {
            this.Url = global::ChinaPay.B3B.Service.Command.Properties.Settings.Default.ChinaPay_B3B_Service_Command_VeWebReference_veSWScnService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RtPnrCompletedEventHandler RtPnrCompleted;
        
        /// <remarks/>
        public event BookCompletedEventHandler BookCompleted;
        
        /// <remarks/>
        public event CreateXCDCompletedEventHandler CreateXCDCompleted;
        
        /// <remarks/>
        public event CancelXCDCompletedEventHandler CancelXCDCompleted;
        
        /// <remarks/>
        public event AVHCompletedEventHandler AVHCompleted;
        
        /// <remarks/>
        public event FFCompletedEventHandler FFCompleted;
        
        /// <remarks/>
        public event DetrCompletedEventHandler DetrCompleted;
        
        /// <remarks/>
        public event ParsePnrCompletedEventHandler ParsePnrCompleted;
        
        /// <remarks/>
        public event ETDZCompletedEventHandler ETDZCompleted;
        
        /// <remarks/>
        public event TSSCompletedEventHandler TSSCompleted;
        
        /// <remarks/>
        public event PATCompletedEventHandler PATCompleted;
        
        /// <remarks/>
        public event FDCompletedEventHandler FDCompleted;
        
        /// <remarks/>
        public event CYCompletedEventHandler CYCompleted;
        
        /// <remarks/>
        public event FLPCompletedEventHandler FLPCompleted;
        
        /// <remarks/>
        public event NFDCompletedEventHandler NFDCompleted;
        
        /// <remarks/>
        public event EditPNRCompletedEventHandler EditPNRCompleted;
        
        /// <remarks/>
        public event CancelPNRCompletedEventHandler CancelPNRCompleted;
        
        /// <remarks/>
        public event CLRFCompletedEventHandler CLRFCompleted;
        
        /// <remarks/>
        public event ANCompletedEventHandler ANCompleted;
        
        /// <remarks/>
        public event TKScanCompletedEventHandler TKScanCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event AVHXMLCompletedEventHandler AVHXMLCompleted;
        
        /// <remarks/>
        public event ONLYDETRCompletedEventHandler ONLYDETRCompleted;
        
        /// <remarks/>
        public event DelUserCompletedEventHandler DelUserCompleted;
        
        /// <remarks/>
        public event ModifyUserCompletedEventHandler ModifyUserCompleted;
        
        /// <remarks/>
        public event DetrXMLCompletedEventHandler DetrXMLCompleted;
        
        /// <remarks/>
        public event PNRPATCompletedEventHandler PNRPATCompleted;
        
        /// <remarks/>
        public event QTECompletedEventHandler QTECompleted;
        
        /// <remarks/>
        public event GetAllGroupsCompletedEventHandler GetAllGroupsCompleted;
        
        /// <remarks/>
        public event GetUsersByGroupCompletedEventHandler GetUsersByGroupCompleted;
        
        /// <remarks/>
        public event GetAllGroupsAndUsersCompletedEventHandler GetAllGroupsAndUsersCompleted;
        
        /// <remarks/>
        public event GetGroupByUserCompletedEventHandler GetGroupByUserCompleted;
        
        /// <remarks/>
        public event AddUser2CompletedEventHandler AddUser2Completed;
        
        /// <remarks/>
        public event SwitchGroupCompletedEventHandler SwitchGroupCompleted;
        
        /// <remarks/>
        public event WFCompletedEventHandler WFCompleted;
        
        /// <remarks/>
        public event CreateXCD2CompletedEventHandler CreateXCD2Completed;
        
        /// <remarks/>
        public event QTE2CompletedEventHandler QTE2Completed;
        
        /// <remarks/>
        public event PnrAuthCompletedEventHandler PnrAuthCompleted;
        
        /// <remarks/>
        public event SSRFOIDCompletedEventHandler SSRFOIDCompleted;
        
        /// <remarks/>
        public event AVHFLTCompletedEventHandler AVHFLTCompleted;
        
        /// <remarks/>
        public event PNRPAT2CompletedEventHandler PNRPAT2Completed;
        
        /// <remarks/>
        public event XCDstateCompletedEventHandler XCDstateCompleted;
        
        /// <remarks/>
        public event RRTPNRCompletedEventHandler RRTPNRCompleted;
        
        /// <remarks/>
        public event Detr2CompletedEventHandler Detr2Completed;
        
        /// <remarks/>
        public event RtxPnrCompletedEventHandler RtxPnrCompleted;
        
        /// <remarks/>
        public event GeneralCmdProcessCompletedEventHandler GeneralCmdProcessCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RtPnr", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string RtPnr(string bstrPnrNO, string strUser, string bstrOffice) {
            object[] results = this.Invoke("RtPnr", new object[] {
                        bstrPnrNO,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RtPnrAsync(string bstrPnrNO, string strUser, string bstrOffice) {
            this.RtPnrAsync(bstrPnrNO, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void RtPnrAsync(string bstrPnrNO, string strUser, string bstrOffice, object userState) {
            if ((this.RtPnrOperationCompleted == null)) {
                this.RtPnrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRtPnrOperationCompleted);
            }
            this.InvokeAsync("RtPnr", new object[] {
                        bstrPnrNO,
                        strUser,
                        bstrOffice}, this.RtPnrOperationCompleted, userState);
        }
        
        private void OnRtPnrOperationCompleted(object arg) {
            if ((this.RtPnrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RtPnrCompleted(this, new RtPnrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Book", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Book(string bstrCmds, string strUser, string bstrOffice) {
            object[] results = this.Invoke("Book", new object[] {
                        bstrCmds,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookAsync(string bstrCmds, string strUser, string bstrOffice) {
            this.BookAsync(bstrCmds, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void BookAsync(string bstrCmds, string strUser, string bstrOffice, object userState) {
            if ((this.BookOperationCompleted == null)) {
                this.BookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookOperationCompleted);
            }
            this.InvokeAsync("Book", new object[] {
                        bstrCmds,
                        strUser,
                        bstrOffice}, this.BookOperationCompleted, userState);
        }
        
        private void OnBookOperationCompleted(object arg) {
            if ((this.BookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookCompleted(this, new BookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CreateXCD", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CreateXCD(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice) {
            object[] results = this.Invoke("CreateXCD", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateXCDAsync(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice) {
            this.CreateXCDAsync(bstrTicketNO, bstrXCDH, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void CreateXCDAsync(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice, object userState) {
            if ((this.CreateXCDOperationCompleted == null)) {
                this.CreateXCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateXCDOperationCompleted);
            }
            this.InvokeAsync("CreateXCD", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice}, this.CreateXCDOperationCompleted, userState);
        }
        
        private void OnCreateXCDOperationCompleted(object arg) {
            if ((this.CreateXCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateXCDCompleted(this, new CreateXCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CancelXCD", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CancelXCD(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice) {
            object[] results = this.Invoke("CancelXCD", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelXCDAsync(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice) {
            this.CancelXCDAsync(bstrTicketNO, bstrXCDH, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void CancelXCDAsync(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice, object userState) {
            if ((this.CancelXCDOperationCompleted == null)) {
                this.CancelXCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelXCDOperationCompleted);
            }
            this.InvokeAsync("CancelXCD", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice}, this.CancelXCDOperationCompleted, userState);
        }
        
        private void OnCancelXCDOperationCompleted(object arg) {
            if ((this.CancelXCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelXCDCompleted(this, new CancelXCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AVH", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AVH(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser) {
            object[] results = this.Invoke("AVH", new object[] {
                        bstrHC,
                        bstrCFDate,
                        bstrHGKS,
                        bstrIFZD,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AVHAsync(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser) {
            this.AVHAsync(bstrHC, bstrCFDate, bstrHGKS, bstrIFZD, strUser, null);
        }
        
        /// <remarks/>
        public void AVHAsync(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser, object userState) {
            if ((this.AVHOperationCompleted == null)) {
                this.AVHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAVHOperationCompleted);
            }
            this.InvokeAsync("AVH", new object[] {
                        bstrHC,
                        bstrCFDate,
                        bstrHGKS,
                        bstrIFZD,
                        strUser}, this.AVHOperationCompleted, userState);
        }
        
        private void OnAVHOperationCompleted(object arg) {
            if ((this.AVHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AVHCompleted(this, new AVHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#FF", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string FF(string bstrHBH, string bstrDate, string strUser) {
            object[] results = this.Invoke("FF", new object[] {
                        bstrHBH,
                        bstrDate,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FFAsync(string bstrHBH, string bstrDate, string strUser) {
            this.FFAsync(bstrHBH, bstrDate, strUser, null);
        }
        
        /// <remarks/>
        public void FFAsync(string bstrHBH, string bstrDate, string strUser, object userState) {
            if ((this.FFOperationCompleted == null)) {
                this.FFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFOperationCompleted);
            }
            this.InvokeAsync("FF", new object[] {
                        bstrHBH,
                        bstrDate,
                        strUser}, this.FFOperationCompleted, userState);
        }
        
        private void OnFFOperationCompleted(object arg) {
            if ((this.FFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFCompleted(this, new FFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Detr", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Detr(string bstrTicketNO, string strUser) {
            object[] results = this.Invoke("Detr", new object[] {
                        bstrTicketNO,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DetrAsync(string bstrTicketNO, string strUser) {
            this.DetrAsync(bstrTicketNO, strUser, null);
        }
        
        /// <remarks/>
        public void DetrAsync(string bstrTicketNO, string strUser, object userState) {
            if ((this.DetrOperationCompleted == null)) {
                this.DetrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetrOperationCompleted);
            }
            this.InvokeAsync("Detr", new object[] {
                        bstrTicketNO,
                        strUser}, this.DetrOperationCompleted, userState);
        }
        
        private void OnDetrOperationCompleted(object arg) {
            if ((this.DetrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetrCompleted(this, new DetrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ParsePnr", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ParsePnr(string bstrPNR, string strUser) {
            object[] results = this.Invoke("ParsePnr", new object[] {
                        bstrPNR,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ParsePnrAsync(string bstrPNR, string strUser) {
            this.ParsePnrAsync(bstrPNR, strUser, null);
        }
        
        /// <remarks/>
        public void ParsePnrAsync(string bstrPNR, string strUser, object userState) {
            if ((this.ParsePnrOperationCompleted == null)) {
                this.ParsePnrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParsePnrOperationCompleted);
            }
            this.InvokeAsync("ParsePnr", new object[] {
                        bstrPNR,
                        strUser}, this.ParsePnrOperationCompleted, userState);
        }
        
        private void OnParsePnrOperationCompleted(object arg) {
            if ((this.ParsePnrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ParsePnrCompleted(this, new ParsePnrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ETDZ", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ETDZ(string bstrPnrNO, string bstrUser, string bstrPwd, string bstrOffice, string bstrEI, string bstrPAT, string bstrSCNY, string bstrPersons, string bstrDDBH, string bstrDYLX, string bstrIsTest) {
            object[] results = this.Invoke("ETDZ", new object[] {
                        bstrPnrNO,
                        bstrUser,
                        bstrPwd,
                        bstrOffice,
                        bstrEI,
                        bstrPAT,
                        bstrSCNY,
                        bstrPersons,
                        bstrDDBH,
                        bstrDYLX,
                        bstrIsTest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ETDZAsync(string bstrPnrNO, string bstrUser, string bstrPwd, string bstrOffice, string bstrEI, string bstrPAT, string bstrSCNY, string bstrPersons, string bstrDDBH, string bstrDYLX, string bstrIsTest) {
            this.ETDZAsync(bstrPnrNO, bstrUser, bstrPwd, bstrOffice, bstrEI, bstrPAT, bstrSCNY, bstrPersons, bstrDDBH, bstrDYLX, bstrIsTest, null);
        }
        
        /// <remarks/>
        public void ETDZAsync(string bstrPnrNO, string bstrUser, string bstrPwd, string bstrOffice, string bstrEI, string bstrPAT, string bstrSCNY, string bstrPersons, string bstrDDBH, string bstrDYLX, string bstrIsTest, object userState) {
            if ((this.ETDZOperationCompleted == null)) {
                this.ETDZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnETDZOperationCompleted);
            }
            this.InvokeAsync("ETDZ", new object[] {
                        bstrPnrNO,
                        bstrUser,
                        bstrPwd,
                        bstrOffice,
                        bstrEI,
                        bstrPAT,
                        bstrSCNY,
                        bstrPersons,
                        bstrDDBH,
                        bstrDYLX,
                        bstrIsTest}, this.ETDZOperationCompleted, userState);
        }
        
        private void OnETDZOperationCompleted(object arg) {
            if ((this.ETDZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ETDZCompleted(this, new ETDZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#TSS", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string TSS(string bstrTicketNO, string strUser, string strIsSuspended, string strOffice) {
            object[] results = this.Invoke("TSS", new object[] {
                        bstrTicketNO,
                        strUser,
                        strIsSuspended,
                        strOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TSSAsync(string bstrTicketNO, string strUser, string strIsSuspended, string strOffice) {
            this.TSSAsync(bstrTicketNO, strUser, strIsSuspended, strOffice, null);
        }
        
        /// <remarks/>
        public void TSSAsync(string bstrTicketNO, string strUser, string strIsSuspended, string strOffice, object userState) {
            if ((this.TSSOperationCompleted == null)) {
                this.TSSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTSSOperationCompleted);
            }
            this.InvokeAsync("TSS", new object[] {
                        bstrTicketNO,
                        strUser,
                        strIsSuspended,
                        strOffice}, this.TSSOperationCompleted, userState);
        }
        
        private void OnTSSOperationCompleted(object arg) {
            if ((this.TSSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TSSCompleted(this, new TSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#PAT", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string PAT(string bstrSS, string bstrPAT, string strUser) {
            object[] results = this.Invoke("PAT", new object[] {
                        bstrSS,
                        bstrPAT,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PATAsync(string bstrSS, string bstrPAT, string strUser) {
            this.PATAsync(bstrSS, bstrPAT, strUser, null);
        }
        
        /// <remarks/>
        public void PATAsync(string bstrSS, string bstrPAT, string strUser, object userState) {
            if ((this.PATOperationCompleted == null)) {
                this.PATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPATOperationCompleted);
            }
            this.InvokeAsync("PAT", new object[] {
                        bstrSS,
                        bstrPAT,
                        strUser}, this.PATOperationCompleted, userState);
        }
        
        private void OnPATOperationCompleted(object arg) {
            if ((this.PATCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PATCompleted(this, new PATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#FD", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string FD(string bstrCityPair, string bstrCFDate, string bstrHGKS, string bstrNeedParsed, string strUser) {
            object[] results = this.Invoke("FD", new object[] {
                        bstrCityPair,
                        bstrCFDate,
                        bstrHGKS,
                        bstrNeedParsed,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FDAsync(string bstrCityPair, string bstrCFDate, string bstrHGKS, string bstrNeedParsed, string strUser) {
            this.FDAsync(bstrCityPair, bstrCFDate, bstrHGKS, bstrNeedParsed, strUser, null);
        }
        
        /// <remarks/>
        public void FDAsync(string bstrCityPair, string bstrCFDate, string bstrHGKS, string bstrNeedParsed, string strUser, object userState) {
            if ((this.FDOperationCompleted == null)) {
                this.FDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFDOperationCompleted);
            }
            this.InvokeAsync("FD", new object[] {
                        bstrCityPair,
                        bstrCFDate,
                        bstrHGKS,
                        bstrNeedParsed,
                        strUser}, this.FDOperationCompleted, userState);
        }
        
        private void OnFDOperationCompleted(object arg) {
            if ((this.FDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FDCompleted(this, new FDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CY", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CY(string bstrPnrNO, string bstrTargetOffice, string strUser) {
            object[] results = this.Invoke("CY", new object[] {
                        bstrPnrNO,
                        bstrTargetOffice,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CYAsync(string bstrPnrNO, string bstrTargetOffice, string strUser) {
            this.CYAsync(bstrPnrNO, bstrTargetOffice, strUser, null);
        }
        
        /// <remarks/>
        public void CYAsync(string bstrPnrNO, string bstrTargetOffice, string strUser, object userState) {
            if ((this.CYOperationCompleted == null)) {
                this.CYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCYOperationCompleted);
            }
            this.InvokeAsync("CY", new object[] {
                        bstrPnrNO,
                        bstrTargetOffice,
                        strUser}, this.CYOperationCompleted, userState);
        }
        
        private void OnCYOperationCompleted(object arg) {
            if ((this.CYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CYCompleted(this, new CYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#FLP", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string FLP(string bstrHBH, string bstrDate, string strUser) {
            object[] results = this.Invoke("FLP", new object[] {
                        bstrHBH,
                        bstrDate,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FLPAsync(string bstrHBH, string bstrDate, string strUser) {
            this.FLPAsync(bstrHBH, bstrDate, strUser, null);
        }
        
        /// <remarks/>
        public void FLPAsync(string bstrHBH, string bstrDate, string strUser, object userState) {
            if ((this.FLPOperationCompleted == null)) {
                this.FLPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFLPOperationCompleted);
            }
            this.InvokeAsync("FLP", new object[] {
                        bstrHBH,
                        bstrDate,
                        strUser}, this.FLPOperationCompleted, userState);
        }
        
        private void OnFLPOperationCompleted(object arg) {
            if ((this.FLPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FLPCompleted(this, new FLPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#NFD", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string NFD(string bstrCityPair, string bstrDate, string bstrHGKS, string strUser) {
            object[] results = this.Invoke("NFD", new object[] {
                        bstrCityPair,
                        bstrDate,
                        bstrHGKS,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NFDAsync(string bstrCityPair, string bstrDate, string bstrHGKS, string strUser) {
            this.NFDAsync(bstrCityPair, bstrDate, bstrHGKS, strUser, null);
        }
        
        /// <remarks/>
        public void NFDAsync(string bstrCityPair, string bstrDate, string bstrHGKS, string strUser, object userState) {
            if ((this.NFDOperationCompleted == null)) {
                this.NFDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNFDOperationCompleted);
            }
            this.InvokeAsync("NFD", new object[] {
                        bstrCityPair,
                        bstrDate,
                        bstrHGKS,
                        strUser}, this.NFDOperationCompleted, userState);
        }
        
        private void OnNFDOperationCompleted(object arg) {
            if ((this.NFDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NFDCompleted(this, new NFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#EditPNR", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string EditPNR(string bstrPnrNO, string bstrCmds, string bstrNeedSealed, string strUser) {
            object[] results = this.Invoke("EditPNR", new object[] {
                        bstrPnrNO,
                        bstrCmds,
                        bstrNeedSealed,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPNRAsync(string bstrPnrNO, string bstrCmds, string bstrNeedSealed, string strUser) {
            this.EditPNRAsync(bstrPnrNO, bstrCmds, bstrNeedSealed, strUser, null);
        }
        
        /// <remarks/>
        public void EditPNRAsync(string bstrPnrNO, string bstrCmds, string bstrNeedSealed, string strUser, object userState) {
            if ((this.EditPNROperationCompleted == null)) {
                this.EditPNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPNROperationCompleted);
            }
            this.InvokeAsync("EditPNR", new object[] {
                        bstrPnrNO,
                        bstrCmds,
                        bstrNeedSealed,
                        strUser}, this.EditPNROperationCompleted, userState);
        }
        
        private void OnEditPNROperationCompleted(object arg) {
            if ((this.EditPNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPNRCompleted(this, new EditPNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CancelPNR", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CancelPNR(string bstrPnrNO, string strUser) {
            object[] results = this.Invoke("CancelPNR", new object[] {
                        bstrPnrNO,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPNRAsync(string bstrPnrNO, string strUser) {
            this.CancelPNRAsync(bstrPnrNO, strUser, null);
        }
        
        /// <remarks/>
        public void CancelPNRAsync(string bstrPnrNO, string strUser, object userState) {
            if ((this.CancelPNROperationCompleted == null)) {
                this.CancelPNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPNROperationCompleted);
            }
            this.InvokeAsync("CancelPNR", new object[] {
                        bstrPnrNO,
                        strUser}, this.CancelPNROperationCompleted, userState);
        }
        
        private void OnCancelPNROperationCompleted(object arg) {
            if ((this.CancelPNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPNRCompleted(this, new CancelPNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CLRF", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CLRF(string strUser) {
            object[] results = this.Invoke("CLRF", new object[] {
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CLRFAsync(string strUser) {
            this.CLRFAsync(strUser, null);
        }
        
        /// <remarks/>
        public void CLRFAsync(string strUser, object userState) {
            if ((this.CLRFOperationCompleted == null)) {
                this.CLRFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCLRFOperationCompleted);
            }
            this.InvokeAsync("CLRF", new object[] {
                        strUser}, this.CLRFOperationCompleted, userState);
        }
        
        private void OnCLRFOperationCompleted(object arg) {
            if ((this.CLRFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CLRFCompleted(this, new CLRFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AN", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AN(string strUser, string strNewPassword) {
            object[] results = this.Invoke("AN", new object[] {
                        strUser,
                        strNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ANAsync(string strUser, string strNewPassword) {
            this.ANAsync(strUser, strNewPassword, null);
        }
        
        /// <remarks/>
        public void ANAsync(string strUser, string strNewPassword, object userState) {
            if ((this.ANOperationCompleted == null)) {
                this.ANOperationCompleted = new System.Threading.SendOrPostCallback(this.OnANOperationCompleted);
            }
            this.InvokeAsync("AN", new object[] {
                        strUser,
                        strNewPassword}, this.ANOperationCompleted, userState);
        }
        
        private void OnANOperationCompleted(object arg) {
            if ((this.ANCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ANCompleted(this, new ANCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#TKScan", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string TKScan(string strUser, string strDate, string strTickets) {
            object[] results = this.Invoke("TKScan", new object[] {
                        strUser,
                        strDate,
                        strTickets});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TKScanAsync(string strUser, string strDate, string strTickets) {
            this.TKScanAsync(strUser, strDate, strTickets, null);
        }
        
        /// <remarks/>
        public void TKScanAsync(string strUser, string strDate, string strTickets, object userState) {
            if ((this.TKScanOperationCompleted == null)) {
                this.TKScanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTKScanOperationCompleted);
            }
            this.InvokeAsync("TKScan", new object[] {
                        strUser,
                        strDate,
                        strTickets}, this.TKScanOperationCompleted, userState);
        }
        
        private void OnTKScanOperationCompleted(object arg) {
            if ((this.TKScanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TKScanCompleted(this, new TKScanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AddUser", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AddUser(string strCode, string strUserName, string strPassword) {
            object[] results = this.Invoke("AddUser", new object[] {
                        strCode,
                        strUserName,
                        strPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string strCode, string strUserName, string strPassword) {
            this.AddUserAsync(strCode, strUserName, strPassword, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string strCode, string strUserName, string strPassword, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        strCode,
                        strUserName,
                        strPassword}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AVHXML", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AVHXML(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser) {
            object[] results = this.Invoke("AVHXML", new object[] {
                        bstrHC,
                        bstrCFDate,
                        bstrHGKS,
                        bstrIFZD,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AVHXMLAsync(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser) {
            this.AVHXMLAsync(bstrHC, bstrCFDate, bstrHGKS, bstrIFZD, strUser, null);
        }
        
        /// <remarks/>
        public void AVHXMLAsync(string bstrHC, string bstrCFDate, string bstrHGKS, string bstrIFZD, string strUser, object userState) {
            if ((this.AVHXMLOperationCompleted == null)) {
                this.AVHXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAVHXMLOperationCompleted);
            }
            this.InvokeAsync("AVHXML", new object[] {
                        bstrHC,
                        bstrCFDate,
                        bstrHGKS,
                        bstrIFZD,
                        strUser}, this.AVHXMLOperationCompleted, userState);
        }
        
        private void OnAVHXMLOperationCompleted(object arg) {
            if ((this.AVHXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AVHXMLCompleted(this, new AVHXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ONLYDETR", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ONLYDETR(string bstrDETR, string strUser) {
            object[] results = this.Invoke("ONLYDETR", new object[] {
                        bstrDETR,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ONLYDETRAsync(string bstrDETR, string strUser) {
            this.ONLYDETRAsync(bstrDETR, strUser, null);
        }
        
        /// <remarks/>
        public void ONLYDETRAsync(string bstrDETR, string strUser, object userState) {
            if ((this.ONLYDETROperationCompleted == null)) {
                this.ONLYDETROperationCompleted = new System.Threading.SendOrPostCallback(this.OnONLYDETROperationCompleted);
            }
            this.InvokeAsync("ONLYDETR", new object[] {
                        bstrDETR,
                        strUser}, this.ONLYDETROperationCompleted, userState);
        }
        
        private void OnONLYDETROperationCompleted(object arg) {
            if ((this.ONLYDETRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ONLYDETRCompleted(this, new ONLYDETRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#DelUser", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string DelUser(string strCode) {
            object[] results = this.Invoke("DelUser", new object[] {
                        strCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelUserAsync(string strCode) {
            this.DelUserAsync(strCode, null);
        }
        
        /// <remarks/>
        public void DelUserAsync(string strCode, object userState) {
            if ((this.DelUserOperationCompleted == null)) {
                this.DelUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUserOperationCompleted);
            }
            this.InvokeAsync("DelUser", new object[] {
                        strCode}, this.DelUserOperationCompleted, userState);
        }
        
        private void OnDelUserOperationCompleted(object arg) {
            if ((this.DelUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUserCompleted(this, new DelUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#ModifyUser", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string ModifyUser(string strCode, string strUserName, string strPassword) {
            object[] results = this.Invoke("ModifyUser", new object[] {
                        strCode,
                        strUserName,
                        strPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserAsync(string strCode, string strUserName, string strPassword) {
            this.ModifyUserAsync(strCode, strUserName, strPassword, null);
        }
        
        /// <remarks/>
        public void ModifyUserAsync(string strCode, string strUserName, string strPassword, object userState) {
            if ((this.ModifyUserOperationCompleted == null)) {
                this.ModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserOperationCompleted);
            }
            this.InvokeAsync("ModifyUser", new object[] {
                        strCode,
                        strUserName,
                        strPassword}, this.ModifyUserOperationCompleted, userState);
        }
        
        private void OnModifyUserOperationCompleted(object arg) {
            if ((this.ModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#DetrXML", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string DetrXML(string bstrDETR, string strUser) {
            object[] results = this.Invoke("DetrXML", new object[] {
                        bstrDETR,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DetrXMLAsync(string bstrDETR, string strUser) {
            this.DetrXMLAsync(bstrDETR, strUser, null);
        }
        
        /// <remarks/>
        public void DetrXMLAsync(string bstrDETR, string strUser, object userState) {
            if ((this.DetrXMLOperationCompleted == null)) {
                this.DetrXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetrXMLOperationCompleted);
            }
            this.InvokeAsync("DetrXML", new object[] {
                        bstrDETR,
                        strUser}, this.DetrXMLOperationCompleted, userState);
        }
        
        private void OnDetrXMLOperationCompleted(object arg) {
            if ((this.DetrXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetrXMLCompleted(this, new DetrXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#PNRPAT", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string PNRPAT(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice) {
            object[] results = this.Invoke("PNRPAT", new object[] {
                        bstrPnrNO,
                        bstrPAT,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PNRPATAsync(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice) {
            this.PNRPATAsync(bstrPnrNO, bstrPAT, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void PNRPATAsync(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice, object userState) {
            if ((this.PNRPATOperationCompleted == null)) {
                this.PNRPATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPNRPATOperationCompleted);
            }
            this.InvokeAsync("PNRPAT", new object[] {
                        bstrPnrNO,
                        bstrPAT,
                        strUser,
                        bstrOffice}, this.PNRPATOperationCompleted, userState);
        }
        
        private void OnPNRPATOperationCompleted(object arg) {
            if ((this.PNRPATCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PNRPATCompleted(this, new PNRPATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#QTE", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string QTE(string bstrSS, string bstrQTE, string strUser) {
            object[] results = this.Invoke("QTE", new object[] {
                        bstrSS,
                        bstrQTE,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QTEAsync(string bstrSS, string bstrQTE, string strUser) {
            this.QTEAsync(bstrSS, bstrQTE, strUser, null);
        }
        
        /// <remarks/>
        public void QTEAsync(string bstrSS, string bstrQTE, string strUser, object userState) {
            if ((this.QTEOperationCompleted == null)) {
                this.QTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQTEOperationCompleted);
            }
            this.InvokeAsync("QTE", new object[] {
                        bstrSS,
                        bstrQTE,
                        strUser}, this.QTEOperationCompleted, userState);
        }
        
        private void OnQTEOperationCompleted(object arg) {
            if ((this.QTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QTECompleted(this, new QTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAllGroups", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetAllGroups() {
            object[] results = this.Invoke("GetAllGroups", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync() {
            this.GetAllGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(object userState) {
            if ((this.GetAllGroupsOperationCompleted == null)) {
                this.GetAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllGroups", new object[0], this.GetAllGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsOperationCompleted(object arg) {
            if ((this.GetAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsCompleted(this, new GetAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetUsersByGroup", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetUsersByGroup(string strGroupID) {
            object[] results = this.Invoke("GetUsersByGroup", new object[] {
                        strGroupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersByGroupAsync(string strGroupID) {
            this.GetUsersByGroupAsync(strGroupID, null);
        }
        
        /// <remarks/>
        public void GetUsersByGroupAsync(string strGroupID, object userState) {
            if ((this.GetUsersByGroupOperationCompleted == null)) {
                this.GetUsersByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersByGroupOperationCompleted);
            }
            this.InvokeAsync("GetUsersByGroup", new object[] {
                        strGroupID}, this.GetUsersByGroupOperationCompleted, userState);
        }
        
        private void OnGetUsersByGroupOperationCompleted(object arg) {
            if ((this.GetUsersByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersByGroupCompleted(this, new GetUsersByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetAllGroupsAndUsers", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetAllGroupsAndUsers() {
            object[] results = this.Invoke("GetAllGroupsAndUsers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAndUsersAsync() {
            this.GetAllGroupsAndUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAndUsersAsync(object userState) {
            if ((this.GetAllGroupsAndUsersOperationCompleted == null)) {
                this.GetAllGroupsAndUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsAndUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllGroupsAndUsers", new object[0], this.GetAllGroupsAndUsersOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsAndUsersOperationCompleted(object arg) {
            if ((this.GetAllGroupsAndUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsAndUsersCompleted(this, new GetAllGroupsAndUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GetGroupByUser", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GetGroupByUser(string strUserCode) {
            object[] results = this.Invoke("GetGroupByUser", new object[] {
                        strUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupByUserAsync(string strUserCode) {
            this.GetGroupByUserAsync(strUserCode, null);
        }
        
        /// <remarks/>
        public void GetGroupByUserAsync(string strUserCode, object userState) {
            if ((this.GetGroupByUserOperationCompleted == null)) {
                this.GetGroupByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupByUserOperationCompleted);
            }
            this.InvokeAsync("GetGroupByUser", new object[] {
                        strUserCode}, this.GetGroupByUserOperationCompleted, userState);
        }
        
        private void OnGetGroupByUserOperationCompleted(object arg) {
            if ((this.GetGroupByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupByUserCompleted(this, new GetGroupByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AddUser2", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AddUser2(string strCode, string strUserName, string strPassword, string strGroupID) {
            object[] results = this.Invoke("AddUser2", new object[] {
                        strCode,
                        strUserName,
                        strPassword,
                        strGroupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUser2Async(string strCode, string strUserName, string strPassword, string strGroupID) {
            this.AddUser2Async(strCode, strUserName, strPassword, strGroupID, null);
        }
        
        /// <remarks/>
        public void AddUser2Async(string strCode, string strUserName, string strPassword, string strGroupID, object userState) {
            if ((this.AddUser2OperationCompleted == null)) {
                this.AddUser2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUser2OperationCompleted);
            }
            this.InvokeAsync("AddUser2", new object[] {
                        strCode,
                        strUserName,
                        strPassword,
                        strGroupID}, this.AddUser2OperationCompleted, userState);
        }
        
        private void OnAddUser2OperationCompleted(object arg) {
            if ((this.AddUser2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUser2Completed(this, new AddUser2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SwitchGroup", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string SwitchGroup(string strCode, string strOldGroupID, string strNewGroupID) {
            object[] results = this.Invoke("SwitchGroup", new object[] {
                        strCode,
                        strOldGroupID,
                        strNewGroupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SwitchGroupAsync(string strCode, string strOldGroupID, string strNewGroupID) {
            this.SwitchGroupAsync(strCode, strOldGroupID, strNewGroupID, null);
        }
        
        /// <remarks/>
        public void SwitchGroupAsync(string strCode, string strOldGroupID, string strNewGroupID, object userState) {
            if ((this.SwitchGroupOperationCompleted == null)) {
                this.SwitchGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwitchGroupOperationCompleted);
            }
            this.InvokeAsync("SwitchGroup", new object[] {
                        strCode,
                        strOldGroupID,
                        strNewGroupID}, this.SwitchGroupOperationCompleted, userState);
        }
        
        private void OnSwitchGroupOperationCompleted(object arg) {
            if ((this.SwitchGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwitchGroupCompleted(this, new SwitchGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#WF", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string WF(string strCity, string strUser) {
            object[] results = this.Invoke("WF", new object[] {
                        strCity,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WFAsync(string strCity, string strUser) {
            this.WFAsync(strCity, strUser, null);
        }
        
        /// <remarks/>
        public void WFAsync(string strCity, string strUser, object userState) {
            if ((this.WFOperationCompleted == null)) {
                this.WFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWFOperationCompleted);
            }
            this.InvokeAsync("WF", new object[] {
                        strCity,
                        strUser}, this.WFOperationCompleted, userState);
        }
        
        private void OnWFOperationCompleted(object arg) {
            if ((this.WFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WFCompleted(this, new WFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#CreateXCD2", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string CreateXCD2(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice, string bstrNeedParsed, string bstrTested) {
            object[] results = this.Invoke("CreateXCD2", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice,
                        bstrNeedParsed,
                        bstrTested});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateXCD2Async(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice, string bstrNeedParsed, string bstrTested) {
            this.CreateXCD2Async(bstrTicketNO, bstrXCDH, strUser, bstrOffice, bstrNeedParsed, bstrTested, null);
        }
        
        /// <remarks/>
        public void CreateXCD2Async(string bstrTicketNO, string bstrXCDH, string strUser, string bstrOffice, string bstrNeedParsed, string bstrTested, object userState) {
            if ((this.CreateXCD2OperationCompleted == null)) {
                this.CreateXCD2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateXCD2OperationCompleted);
            }
            this.InvokeAsync("CreateXCD2", new object[] {
                        bstrTicketNO,
                        bstrXCDH,
                        strUser,
                        bstrOffice,
                        bstrNeedParsed,
                        bstrTested}, this.CreateXCD2OperationCompleted, userState);
        }
        
        private void OnCreateXCD2OperationCompleted(object arg) {
            if ((this.CreateXCD2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateXCD2Completed(this, new CreateXCD2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#QTE2", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string QTE2(string bstrSS, string bstrQTE, string bstrChildCmds, string strUser) {
            object[] results = this.Invoke("QTE2", new object[] {
                        bstrSS,
                        bstrQTE,
                        bstrChildCmds,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QTE2Async(string bstrSS, string bstrQTE, string bstrChildCmds, string strUser) {
            this.QTE2Async(bstrSS, bstrQTE, bstrChildCmds, strUser, null);
        }
        
        /// <remarks/>
        public void QTE2Async(string bstrSS, string bstrQTE, string bstrChildCmds, string strUser, object userState) {
            if ((this.QTE2OperationCompleted == null)) {
                this.QTE2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQTE2OperationCompleted);
            }
            this.InvokeAsync("QTE2", new object[] {
                        bstrSS,
                        bstrQTE,
                        bstrChildCmds,
                        strUser}, this.QTE2OperationCompleted, userState);
        }
        
        private void OnQTE2OperationCompleted(object arg) {
            if ((this.QTE2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QTE2Completed(this, new QTE2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#PnrAuth", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string PnrAuth(string strPnrNO, string bstrOffice, string bstrTargetOffices, string bstrOfficesToDelete, string strUser) {
            object[] results = this.Invoke("PnrAuth", new object[] {
                        strPnrNO,
                        bstrOffice,
                        bstrTargetOffices,
                        bstrOfficesToDelete,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PnrAuthAsync(string strPnrNO, string bstrOffice, string bstrTargetOffices, string bstrOfficesToDelete, string strUser) {
            this.PnrAuthAsync(strPnrNO, bstrOffice, bstrTargetOffices, bstrOfficesToDelete, strUser, null);
        }
        
        /// <remarks/>
        public void PnrAuthAsync(string strPnrNO, string bstrOffice, string bstrTargetOffices, string bstrOfficesToDelete, string strUser, object userState) {
            if ((this.PnrAuthOperationCompleted == null)) {
                this.PnrAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPnrAuthOperationCompleted);
            }
            this.InvokeAsync("PnrAuth", new object[] {
                        strPnrNO,
                        bstrOffice,
                        bstrTargetOffices,
                        bstrOfficesToDelete,
                        strUser}, this.PnrAuthOperationCompleted, userState);
        }
        
        private void OnPnrAuthOperationCompleted(object arg) {
            if ((this.PnrAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PnrAuthCompleted(this, new PnrAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#SSRFOID", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string SSRFOID(string strPnrNO, string bstrName, string bstrOldFOID, string bstrNewFOID, string bstrType, string bstrOffice, string strUser) {
            object[] results = this.Invoke("SSRFOID", new object[] {
                        strPnrNO,
                        bstrName,
                        bstrOldFOID,
                        bstrNewFOID,
                        bstrType,
                        bstrOffice,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SSRFOIDAsync(string strPnrNO, string bstrName, string bstrOldFOID, string bstrNewFOID, string bstrType, string bstrOffice, string strUser) {
            this.SSRFOIDAsync(strPnrNO, bstrName, bstrOldFOID, bstrNewFOID, bstrType, bstrOffice, strUser, null);
        }
        
        /// <remarks/>
        public void SSRFOIDAsync(string strPnrNO, string bstrName, string bstrOldFOID, string bstrNewFOID, string bstrType, string bstrOffice, string strUser, object userState) {
            if ((this.SSRFOIDOperationCompleted == null)) {
                this.SSRFOIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSRFOIDOperationCompleted);
            }
            this.InvokeAsync("SSRFOID", new object[] {
                        strPnrNO,
                        bstrName,
                        bstrOldFOID,
                        bstrNewFOID,
                        bstrType,
                        bstrOffice,
                        strUser}, this.SSRFOIDOperationCompleted, userState);
        }
        
        private void OnSSRFOIDOperationCompleted(object arg) {
            if ((this.SSRFOIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSRFOIDCompleted(this, new SSRFOIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#AVHFLT", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string AVHFLT(string strFlightNO, string bstrDate, string strUser) {
            object[] results = this.Invoke("AVHFLT", new object[] {
                        strFlightNO,
                        bstrDate,
                        strUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AVHFLTAsync(string strFlightNO, string bstrDate, string strUser) {
            this.AVHFLTAsync(strFlightNO, bstrDate, strUser, null);
        }
        
        /// <remarks/>
        public void AVHFLTAsync(string strFlightNO, string bstrDate, string strUser, object userState) {
            if ((this.AVHFLTOperationCompleted == null)) {
                this.AVHFLTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAVHFLTOperationCompleted);
            }
            this.InvokeAsync("AVHFLT", new object[] {
                        strFlightNO,
                        bstrDate,
                        strUser}, this.AVHFLTOperationCompleted, userState);
        }
        
        private void OnAVHFLTOperationCompleted(object arg) {
            if ((this.AVHFLTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AVHFLTCompleted(this, new AVHFLTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#PNRPAT2", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string PNRPAT2(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice) {
            object[] results = this.Invoke("PNRPAT2", new object[] {
                        bstrPnrNO,
                        bstrPAT,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PNRPAT2Async(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice) {
            this.PNRPAT2Async(bstrPnrNO, bstrPAT, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void PNRPAT2Async(string bstrPnrNO, string bstrPAT, string strUser, string bstrOffice, object userState) {
            if ((this.PNRPAT2OperationCompleted == null)) {
                this.PNRPAT2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPNRPAT2OperationCompleted);
            }
            this.InvokeAsync("PNRPAT2", new object[] {
                        bstrPnrNO,
                        bstrPAT,
                        strUser,
                        bstrOffice}, this.PNRPAT2OperationCompleted, userState);
        }
        
        private void OnPNRPAT2OperationCompleted(object arg) {
            if ((this.PNRPAT2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PNRPAT2Completed(this, new PNRPAT2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#XCDstate", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string XCDstate(string bstrTicketNO, string strUser, string bstrOffice) {
            object[] results = this.Invoke("XCDstate", new object[] {
                        bstrTicketNO,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void XCDstateAsync(string bstrTicketNO, string strUser, string bstrOffice) {
            this.XCDstateAsync(bstrTicketNO, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void XCDstateAsync(string bstrTicketNO, string strUser, string bstrOffice, object userState) {
            if ((this.XCDstateOperationCompleted == null)) {
                this.XCDstateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXCDstateOperationCompleted);
            }
            this.InvokeAsync("XCDstate", new object[] {
                        bstrTicketNO,
                        strUser,
                        bstrOffice}, this.XCDstateOperationCompleted, userState);
        }
        
        private void OnXCDstateOperationCompleted(object arg) {
            if ((this.XCDstateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XCDstateCompleted(this, new XCDstateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RRTPNR", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string RRTPNR(string bstrPnrNO, string bstrFlight, string strDate, string strUser, string bstrOffice) {
            object[] results = this.Invoke("RRTPNR", new object[] {
                        bstrPnrNO,
                        bstrFlight,
                        strDate,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RRTPNRAsync(string bstrPnrNO, string bstrFlight, string strDate, string strUser, string bstrOffice) {
            this.RRTPNRAsync(bstrPnrNO, bstrFlight, strDate, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void RRTPNRAsync(string bstrPnrNO, string bstrFlight, string strDate, string strUser, string bstrOffice, object userState) {
            if ((this.RRTPNROperationCompleted == null)) {
                this.RRTPNROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRRTPNROperationCompleted);
            }
            this.InvokeAsync("RRTPNR", new object[] {
                        bstrPnrNO,
                        bstrFlight,
                        strDate,
                        strUser,
                        bstrOffice}, this.RRTPNROperationCompleted, userState);
        }
        
        private void OnRRTPNROperationCompleted(object arg) {
            if ((this.RRTPNRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RRTPNRCompleted(this, new RRTPNRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#Detr2", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Detr2(string bstrTicketNO, string bstrUserName, string bstrOffice) {
            object[] results = this.Invoke("Detr2", new object[] {
                        bstrTicketNO,
                        bstrUserName,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Detr2Async(string bstrTicketNO, string bstrUserName, string bstrOffice) {
            this.Detr2Async(bstrTicketNO, bstrUserName, bstrOffice, null);
        }
        
        /// <remarks/>
        public void Detr2Async(string bstrTicketNO, string bstrUserName, string bstrOffice, object userState) {
            if ((this.Detr2OperationCompleted == null)) {
                this.Detr2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetr2OperationCompleted);
            }
            this.InvokeAsync("Detr2", new object[] {
                        bstrTicketNO,
                        bstrUserName,
                        bstrOffice}, this.Detr2OperationCompleted, userState);
        }
        
        private void OnDetr2OperationCompleted(object arg) {
            if ((this.Detr2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Detr2Completed(this, new Detr2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#RtxPnr", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string RtxPnr(string bstrPnrNO, string strUser, string bstrOffice) {
            object[] results = this.Invoke("RtxPnr", new object[] {
                        bstrPnrNO,
                        strUser,
                        bstrOffice});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RtxPnrAsync(string bstrPnrNO, string strUser, string bstrOffice) {
            this.RtxPnrAsync(bstrPnrNO, strUser, bstrOffice, null);
        }
        
        /// <remarks/>
        public void RtxPnrAsync(string bstrPnrNO, string strUser, string bstrOffice, object userState) {
            if ((this.RtxPnrOperationCompleted == null)) {
                this.RtxPnrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRtxPnrOperationCompleted);
            }
            this.InvokeAsync("RtxPnr", new object[] {
                        bstrPnrNO,
                        strUser,
                        bstrOffice}, this.RtxPnrOperationCompleted, userState);
        }
        
        private void OnRtxPnrOperationCompleted(object arg) {
            if ((this.RtxPnrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RtxPnrCompleted(this, new RtxPnrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("#GeneralCmdProcess", RequestNamespace="urn:veSWScnService", ResponseNamespace="urn:veSWScnService")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string GeneralCmdProcess(string bstrInputXML) {
            object[] results = this.Invoke("GeneralCmdProcess", new object[] {
                        bstrInputXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneralCmdProcessAsync(string bstrInputXML) {
            this.GeneralCmdProcessAsync(bstrInputXML, null);
        }
        
        /// <remarks/>
        public void GeneralCmdProcessAsync(string bstrInputXML, object userState) {
            if ((this.GeneralCmdProcessOperationCompleted == null)) {
                this.GeneralCmdProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneralCmdProcessOperationCompleted);
            }
            this.InvokeAsync("GeneralCmdProcess", new object[] {
                        bstrInputXML}, this.GeneralCmdProcessOperationCompleted, userState);
        }
        
        private void OnGeneralCmdProcessOperationCompleted(object arg) {
            if ((this.GeneralCmdProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneralCmdProcessCompleted(this, new GeneralCmdProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RtPnrCompletedEventHandler(object sender, RtPnrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RtPnrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RtPnrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BookCompletedEventHandler(object sender, BookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateXCDCompletedEventHandler(object sender, CreateXCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateXCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateXCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelXCDCompletedEventHandler(object sender, CancelXCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelXCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelXCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AVHCompletedEventHandler(object sender, AVHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AVHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AVHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FFCompletedEventHandler(object sender, FFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DetrCompletedEventHandler(object sender, DetrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ParsePnrCompletedEventHandler(object sender, ParsePnrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParsePnrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ParsePnrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ETDZCompletedEventHandler(object sender, ETDZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ETDZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ETDZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TSSCompletedEventHandler(object sender, TSSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TSSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TSSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PATCompletedEventHandler(object sender, PATCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FDCompletedEventHandler(object sender, FDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CYCompletedEventHandler(object sender, CYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FLPCompletedEventHandler(object sender, FLPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FLPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FLPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NFDCompletedEventHandler(object sender, NFDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NFDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NFDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditPNRCompletedEventHandler(object sender, EditPNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelPNRCompletedEventHandler(object sender, CancelPNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CLRFCompletedEventHandler(object sender, CLRFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLRFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CLRFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ANCompletedEventHandler(object sender, ANCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ANCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ANCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TKScanCompletedEventHandler(object sender, TKScanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TKScanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TKScanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AVHXMLCompletedEventHandler(object sender, AVHXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AVHXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AVHXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ONLYDETRCompletedEventHandler(object sender, ONLYDETRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ONLYDETRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ONLYDETRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelUserCompletedEventHandler(object sender, DelUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyUserCompletedEventHandler(object sender, ModifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DetrXMLCompletedEventHandler(object sender, DetrXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetrXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetrXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PNRPATCompletedEventHandler(object sender, PNRPATCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PNRPATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PNRPATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QTECompletedEventHandler(object sender, QTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllGroupsCompletedEventHandler(object sender, GetAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsersByGroupCompletedEventHandler(object sender, GetUsersByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllGroupsAndUsersCompletedEventHandler(object sender, GetAllGroupsAndUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsAndUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsAndUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGroupByUserCompletedEventHandler(object sender, GetGroupByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddUser2CompletedEventHandler(object sender, AddUser2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUser2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUser2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwitchGroupCompletedEventHandler(object sender, SwitchGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwitchGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void WFCompletedEventHandler(object sender, WFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateXCD2CompletedEventHandler(object sender, CreateXCD2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateXCD2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateXCD2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void QTE2CompletedEventHandler(object sender, QTE2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QTE2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QTE2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PnrAuthCompletedEventHandler(object sender, PnrAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PnrAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PnrAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SSRFOIDCompletedEventHandler(object sender, SSRFOIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSRFOIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSRFOIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AVHFLTCompletedEventHandler(object sender, AVHFLTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AVHFLTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AVHFLTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PNRPAT2CompletedEventHandler(object sender, PNRPAT2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PNRPAT2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PNRPAT2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void XCDstateCompletedEventHandler(object sender, XCDstateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XCDstateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XCDstateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RRTPNRCompletedEventHandler(object sender, RRTPNRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RRTPNRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RRTPNRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Detr2CompletedEventHandler(object sender, Detr2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Detr2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Detr2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RtxPnrCompletedEventHandler(object sender, RtxPnrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RtxPnrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RtxPnrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GeneralCmdProcessCompletedEventHandler(object sender, GeneralCmdProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneralCmdProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneralCmdProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591